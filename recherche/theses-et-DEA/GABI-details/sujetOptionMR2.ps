%!PS-Adobe-2.0
%%Creator: dvips(k) 5.92b Copyright 2002 Radical Eye Software
%%Title: sujetOptionMR2.dvi
%%Pages: 3
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: Times-Roman Times-Bold Times-Italic Courier
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips sujetOptionMR2 -o
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2005.10.07:1042
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro
%!
% PostScript prologue for pstricks.tex.
% Version 97 patch 3, 98/06/01
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Atan { /atan load stopped { pop pop 0 } if } def
/Div { dup 0 eq { pop } { div } ifelse } def
/NET { neg exch neg exch T } def
/Pyth { dup mul exch dup mul add sqrt } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def }
def
/PathLength { flattenpath /z 0 def { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
} { /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
/pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
0 } ifelse setdash stroke } def
/DotLine { /b PathLength def /a ED /z ED /y CLW def /z y z add def a 0 gt
{ /b b a div def } { a 0 eq { /b b y sub def } { a -3 eq { /b b y add
def } if } ifelse } ifelse [ 0 b b z Div round Div dup 0 le { pop 1 } if
] a 0 gt { 0 } { y 2 div a -2 gt { neg } if } ifelse setdash 1
setlinecap stroke } def
/LineFill { gsave abs CLW add /a ED a 0 dtransform round exch round exch
2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
% DG/SR modification end
Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
% def
a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
pop pop } def
% DG/SR modification end
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
load } if ] cvx newpath 3 1 roll T exec } def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop } if
f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/Line { NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub
def n { Lineto } repeat CP 4 2 roll ArrowB L pop pop } if } def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
Lineto pop pop closepath } ifelse } def
/Diamond { /mtrx CM def T rotate /h ED /w ED dup 0 eq { pop } { CLW mul
neg /d ED /a w h Atan def /h d a sin Div h add def /w d a cos Div w add
def } ifelse mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2
div /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { NArray n 3 lt { n { pop pop } repeat } { BOC /n n 3 sub def
n { NC } repeat EOC } ifelse } def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro
%!PS-Adobe-2.0
%%Title: Dot Font for PSTricks
%%Creator: Timothy Van Zandt <tvz@Princeton.EDU>
%%Creation Date: May 7, 1993
%% Version 97 patch 1, 99/12/16
%% Modified by Etienne Riga <etienne.riga@skynet.be> - Dec. 16, 1999
%% to add /Diamond, /SolidDiamond and /BoldDiamond
10 dict dup begin
  /FontType 3 def
  /FontMatrix [ .001 0 0 .001 0 0 ] def
  /FontBBox [ 0 0 0 0 ] def
  /Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
% DG/SR modification end
  /Metrics 13 dict def
  Metrics begin
    /Bullet        1000   def
    /Circle        1000   def
    /BoldCircle    1000   def
    /SolidTriangle 1344   def
    /Triangle      1344   def
    /BoldTriangle  1344   def
    /SolidSquare    886   def
    /Square         886   def
    /BoldSquare     886   def
    /SolidPentagon 1093.2 def
    /Pentagon      1093.2 def
    /BoldPentagon  1093.2 def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /SolidDiamond  1008   def
    /Diamond       1008   def
    /BoldDiamond   1008   def
% DG/SR modification end
    /.notdef 0 def
  end
  /BBoxes 13 dict def
  BBoxes begin
    /Circle        { -550 -550 550 550 } def
    /BoldCircle    /Circle load def
    /Bullet        /Circle load def
    /Triangle      { -571.5 -330 571.5 660 } def
    /BoldTriangle  /Triangle load def
    /SolidTriangle /Triangle load def
    /Square        { -450 -450 450 450 } def
    /BoldSquare    /Square load def
    /SolidSquare   /Square load def
    /Pentagon      { -546.6 -465 546.6 574.7 } def
    /BoldPentagon  /Pentagon load def
    /SolidPentagon /Pentagon load def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /Diamond       { -428.5 -742.5 428.5 742.5 } def
    /BoldDiamond   /Diamond load def
    /SolidDiamond  /Diamond load def
% DG/SR modification end
    /.notdef { 0 0 0 0 } def
  end
  /CharProcs 20 dict def
  CharProcs begin
    /Adjust {
      2 copy dtransform floor .5 add exch floor .5 add exch idtransform
      3 -1 roll div 3 1 roll exch div exch scale
    } def
    /CirclePath    { 0 0 500 0 360 arc closepath } def
    /Bullet        { 500 500 Adjust CirclePath fill } def
    /Circle        { 500 500 Adjust CirclePath .9 .9 scale CirclePath
                     eofill } def
    /BoldCircle    { 500 500 Adjust CirclePath .8 .8 scale CirclePath
                     eofill } def
    /BoldCircle    { CirclePath .8 .8 scale CirclePath eofill } def
    /TrianglePath  { 0  660 moveto -571.5 -330 lineto 571.5 -330 lineto
                     closepath } def
    /SolidTriangle { TrianglePath fill } def
    /Triangle      { TrianglePath .85 .85 scale TrianglePath eofill } def
    /BoldTriangle  { TrianglePath .7 .7 scale TrianglePath eofill } def
    /SquarePath    { -450 450 moveto 450 450 lineto 450 -450 lineto
                     -450 -450 lineto closepath } def
    /SolidSquare   { SquarePath fill } def
    /Square        { SquarePath .89 .89 scale SquarePath eofill } def
    /BoldSquare    { SquarePath .78 .78 scale SquarePath eofill } def
    /PentagonPath  {
      -337.8 -465   moveto
       337.8 -465   lineto
       546.6  177.6 lineto
         0    574.7 lineto
      -546.6  177.6 lineto
      closepath
    } def
    /SolidPentagon { PentagonPath fill } def
    /Pentagon      { PentagonPath .89 .89 scale PentagonPath eofill } def
    /BoldPentagon  { PentagonPath .78 .78 scale PentagonPath eofill } def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /DiamondPath   { 0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto
                     428.5 0 lineto closepath } def
    /SolidDiamond  { DiamondPath fill } def
    /Diamond       { DiamondPath .85 .85 scale DiamondPath eofill } def
    /BoldDiamond   { DiamondPath .7 .7 scale DiamondPath eofill } def
% DG/SR modification end
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
      Metrics 1 index get exec 0
      BBoxes 3 index get exec
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop
%END pst-dots.pro

%%EndProcSet
%%BeginProcSet: 8r.enc
% File  8r.enc as of 2002-03-12 for PSNFSS 9
%
% This is the encoding vector for Type1 and TrueType fonts to be used
% with TeX.  This file is part of the PSNFSS bundle, version 9
% 
% Authors: S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry, W. Schmidt
%
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida + Euro.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (6) /Euro is assigned to 128, as in Windows ANSI
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there down to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /Euro /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (sujetOptionMR2.dvi)
@start /Fa 138[55 2[55 3[55 1[55 2[55 3[55 1[55 99[{
 TeXBase1Encoding ReEncodeFont }7 90.9091 /Courier rf
/Fb 22[40 8[45 103[45 2[51 30 35 40 1[51 45 51 76 25
2[25 51 45 30 40 51 40 51 45 20[61 8[66 27[30 36[51 2[{
 TeXBase1Encoding ReEncodeFont }25 90.9091 /Times-Bold
rf /Fc 22[40 115[45 25 35 35 2[45 45 1[25 6[40 45 40
59[30 39[{ TeXBase1Encoding ReEncodeFont }12 90.9091
/Times-Italic rf /Fd 166[53 53 1[53 53 44 40 49 1[40
53 53 65 44 53 28 24 1[53 40 44 1[49 49 53 65[{
 TeXBase1Encoding ReEncodeFont }21 72.7272 /Times-Roman
rf /Fe 4[45 6[45 9[40 40 1[40 6[40 22[56 44[66 5[45 27[40
45 45 1[45 45 25 35 30 45 45 45 45 71 25 1[25 25 45 45
30 40 45 40 45 40 11[66 56 51 61 1[51 66 66 81 56 66
1[30 66 66 51 56 66 61 61 66 84 4[25 25 45 45 45 45 45
45 45 45 45 45 25 23 30 23 2[30 30 30 36[51 2[{
 TeXBase1Encoding ReEncodeFont }73 90.9091 /Times-Roman
rf /Ff 22[53 115[66 40 47 53 1[66 60 66 100 2[40 33 1[60
40 53 66 53 1[60 14[86 1[73 93 11[86 14[60 60 60 60 49[{
 TeXBase1Encoding ReEncodeFont }25 119.552 /Times-Bold
rf /Fg 171[49 44 53 1[44 1[58 71 5[58 1[49 3[58 65[{
 TeXBase1Encoding ReEncodeFont }9 79.701 /Times-Roman
rf /Fh 23[29 122[52 7[29 101[{ TeXBase1Encoding ReEncodeFont }3
66.4176 /Times-Roman rf /Fi 22[44 115[50 28 39 33 50
50 50 50 78 28 2[28 50 50 33 44 50 44 50 44 12[61 1[66
1[55 72 1[89 61 2[33 1[72 3[66 66 12[50 2[50 1[50 6[33
33 40[{ TeXBase1Encoding ReEncodeFont }35 99.6264 /Times-Roman
rf /Fj 182[38 1[83 4[77 83 65[{ TeXBase1Encoding ReEncodeFont }4
114.77 /Times-Roman rf /Fk 22[64 45[72 15[72 52[72 72
40 56 48 72 72 72 72 112 40 1[40 40 2[48 64 72 64 1[64
23[48 1[104 2[104 1[96 104 6[40 18[48 39[{
 TeXBase1Encoding ReEncodeFont }28 143.462 /Times-Roman
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 75 763 3675 4 v 206 946 a Fk(D\351v)n(eloppement)
32 b(d'un)j(outil)g(de)g(\253)h(G\351n\351ration)d(Automatique)g(de)914
1128 y(Belles)i(Interf)o(aces)e(\273)i(:)h(le)f(projet)k
Fj(G)8 b(A)g(B)g(I)p 75 1311 V 852 1564 a Fi(Proposition)24
b(de)h(stage)f(de)h(Master)g(Recherche)h(2)2601 1527
y Fh(\350me)2741 1564 y Fi(ann\351e)423 1680 y(par)f(le)g(Laboratoire)f
(Informatique)g(et)h(T\351l\351communication)e(\()r Fg(E)t(N)t(S)t(T)32
b Fi(B)t Fg(R)t(E)t(T)m(A)q(G)t(N)t(E)r Fi(\))975 1796
y(et)25 b(le)f(Centre)i(Informatique)e(G\351ologique)g(\()r
Fg(E)t(N)t(S)t(M)t(P)r Fi(\))1640 1998 y(Octobre)h(2005)75
2390 y Ff(1)119 b(Pr\351sentation)30 b(du)h(pr)n(ojet)216
2597 y Fe(Le)i(Centre)i(informatique)i(G\351ologique)f(\()r
Fd(C)t(I)t(G)r Fe(\))f(a)e(pour)i(v)n(ocation)i(de)d(d\351v)o(elopper)j
(des)d(logiciels)i(scienti-)75 2710 y(\002ques)c(appliqu\351s)i(au)d
(domaine)h(de)g(l'eau.)g(Le)e(projet)35 b Fd(G)t(A)t(B)t(I)e
Fe(est)e(n\351)h(de)f(collaborations)36 b(entre)c(le)f(Laboratoire)75
2823 y(d'Informatique)e(de)d(l')r Fd(E)t(N)t(S)t(T)k
Fe(Bretagne)d(et)e(des)h(chercheurs)j(du)e Fd(C)t(I)t(G)r
Fe(,)f(dans)g(le)f(cadre)i(de)f(projets)h(de)e(d\351v)o(eloppe-)75
2936 y(ment)g(d'interf)o(aces)j(pour)e(les)g(logiciels)h
(scienti\002ques)h(d\351v)o(elopp\351s)f(au)g Fd(C)t(I)t(G)r
Fe(.)e(L)-8 b('objectif)27 b(du)e(projet)j Fd(G)t(A)t(B)t(I)f
Fe(est)e(de)75 3048 y(cr\351er)f(un)f(outil)h(permettant)h
(d'automatiser)h(le)d(cr\351ation)h(d'une)h(interf)o(ace)g(graphique)h
(pour)d(des)h(logiciels)h(scien-)75 3161 y(ti\002ques)h(comple)o(x)o
(es.)g(Dans)f(la)g(majorit\351)h(des)g(cas,)f(les)g(interf)o(aces)j
(sont)e(en)f(ef)n(fet)g(cr\351es)h(au)f(cas)h(par)f(cas,)g(soit)h(par)
75 3274 y(les)c(concepteurs)j(de)d(logiciels,)i(soit)e(leur)g(d\351v)o
(eloppement)j(est)d(sous-trait\351)j(\340)c(d'autres)j(laboratoires)h
(ou)d(b)n(ureaux)75 3387 y(d'\351tude,)27 b(cr\351ant)g(ainsi)g(une)f
(relation)h(de)f(d\351pendance,)j(qui)d(peut)g(s'a)n(v\351rer)i
(co\373teuse.)g(Dans)d(tous)i(les)e(cas)h(le)g(d\351-)75
3500 y(v)o(eloppement)g(de)d(telles)h(interf)o(ace)i(reste)e
(co\373teux)h(en)e(temps.)g(P)o(ar)f(ailleurs)j(de)f(nombreux)h(outils)
f(de)f(g\351n\351ration)75 3613 y(automatique)33 b(d'interf)o(ace)g(e)o
(xistent)g(d\351j\340)e(\(Schlee)g(2002\).)g(Cependant,)h(ces)f(outils)
h(restent)g(souv)o(ent)g(critiqu\351s)75 3726 y(pour)25
b(leur)h(incapacit\351)h(\340)d(produire)j(des)e(interf)o(aces)j
(riches)d(et)g(comple)o(x)o(es)h(et)e(une)i(partie)f(de)g(la)g
(conception)i(reste)75 3839 y(g\351n\351ralement)d(manuelle)e
(\(description)i(de)d(l'interf)o(ace,)j(des)d(donn\351es\).)i(Le)d
(projet)k Fd(G)t(A)t(B)t(I)f Fe(pr\351v)n(oit)f(la)f(conception)75
3952 y(d'un)32 b(outil)h(qui)e(sera)h(capable)i(d'analyser)g(la)d
(partie)i Fc(code)f(de)g(lectur)m(e)g(des)g(donn\351es)i(d'entr\351e)f
Fe(d'un)g(logiciel,)75 4065 y(en)28 b(se)f(basant)i(sur)f
(l'utilisation)j(de)c(grammaires,)i(et)e(de)h(g\351n\351rer)h(le)e
(code)i(d'interf)o(ace)h(automatiquement.)h(Les)75 4178
y(mises)g(\340)f(jour)i(de)f(l'interf)o(ace)i(seront)g(g\351r\351es)f
(automatiquement)i(par)d(le)g(lancement)i(d'une)f(nouv)o(elle)g
(analyse)75 4290 y(des)24 b(\002chiers)g(syntaxiques)j(et)d
(grammaticaux.)216 4403 y(L)-8 b('outil)38 b Fd(G)t(A)t(B)t(I)e
Fe(est)g(d\351v)o(elopp\351)h(depuis)g(plusieurs)g(ann\351es)g(dans)e
(le)g(cadre)h(d'une)h(collaboration)h(entre)e(le)77 4516
y Fd(C)t(I)t(G)f Fe(et)e(le)i Fd(L)t(I)t(T)h Fe(\(Bonniez)f(2001;)f(Ev)
o(en)f(et)g(al.)f(2002;)j(Ev)o(en)d(et)h(al.)g(2003;)h(Ev)o(en)f(et)g
(al.)f(2004;)j(P)o(aquin)e(2005\).)75 4629 y(Un)23 b(des)h(aspects)i
(essentiel)g(pour)f(comprendre)h(le)e(fonctionnement)k(de)c(l'outil)j
Fd(G)t(A)t(B)t(I)f Fe(est)e(la)g(repr\351sentation)k(des)75
4742 y(donn\351es)h(sous)g(la)e(forme)g(d'une)i(arborescence,)i
(d\351duite)e(de)e(l'analyse)j(des)e(\002chiers)g(d\351\002nissant)h
(le)f(le)o(xique)g(et)75 4855 y(la)33 b(grammaire)h(d'un)f(logiciel.)i
(Chaque)f(action)g(de)f(la)g(grammaire)h(correspond)i(\340)c(un)h
(n\234ud)g(et)g(les)g(\351l\351ments)75 4968 y(le)o(xicaux)23
b(correspondent)i(aux)d(feuilles)h(de)e(l'arbre.)i(L)-8
b('ensemble)22 b(des)g(fonctions)h(d\351v)o(elopp\351es)i(\340)20
b(ce)i(jour)f(ont)h(\351t\351)75 5081 y(int\351gr\351es)k(dans)e(une)g
(interf)o(ace)i(permettant)g(de)216 5194 y(\226)46 b(g\351n\351rer)25
b(l'arbre)g(conceptuel)19 b(;)216 5307 y(\226)46 b(sauv)o(e)o(garder)26
b(un)d(arbre)17 b(;)216 5420 y(\226)46 b(ouvrir)25 b(un)f(ancien)h
(arbre)16 b(;)216 5533 y(\226)46 b(af)n(\002cher)24 b(un)g(arbre)g(de)g
(donn\351es)18 b(;)1890 5841 y(1)p eop end
%%Page: 2 2
TeXDict begin 2 1 bop 216 399 a Fe(\226)46 b(modi\002er)24
b(l'arbre.)216 511 y(Dans)29 b(l'\351tat)h(actuel)h(il)e(est)g(donc)h
(possible)h(de)e(cr\351er)h(un)f(jeu)h(de)f(donn\351es)i(r\351elles,)f
(de)f(les)h(af)n(\002cher)f(au)h(sein)75 624 y(de)22
b(l'interf)o(ace)j(et)d(de)h(les)f(sauv)o(e)o(garder)i(au)f(format)f
(te)o(xte.)h Fb(La)e(r)n(electur)n(e)k(au)c(f)n(ormat)i(texte)g(n'est)f
(actuellement)75 737 y(pas)k(possible)p Fe(.)g(Les)g(donn\351es)j(sont)
e(notamment)h(sauv)o(e)o(gard\351es)h(dans)e(un)g(format)f(d'arbre)j
(s\351rialis\351)f(a\002n)e(d'\352tre)75 850 y(relues.)216
963 y(Deux)e(fonctions)i(importantes)g(des)e(parsers)h(ont)f
(\351galement)h(\351t\351)e(introduites)k(:)216 1076
y(\226)46 b(la)23 b(fonction)j(commentaire)18 b(;)216
1189 y(\226)46 b(la)23 b(fonction)j(d'inclusion.)216
1302 y Fb(Cependant)c(la)i(f)n(onction)f(d'inclusion)g(r)n(este)i(\340)
e(am\351lior)n(er)p Fe(.)216 1415 y(L)-8 b('application)26
b(est)e(d\351v)o(elopp\351e)i(en)g Fd(JA)-6 b(V)g(A)25
b Fe(et)f(est)g(actuellement)i(g\351r\351e)e(sous)j Fd(C)t(V)t(S)r
Fe(.)75 1707 y Ff(2)119 b(Or)o(ganisation)216 1914 y
Fe(Le)23 b(tra)n(v)n(ail)i(comprend)216 2027 y(\226)46
b(une)24 b(recherche)h(bibliographique)j(sur)23 b(les)h
(g\351n\351rateurs)i(automatiques)g(d'interf)o(ace)g(graphique)g(et)d
(l'\351cri-)307 2140 y(ture)h(d'un)g(rapport)i(bibliographique)21
b(;)216 2253 y(\226)46 b(la)23 b(prise)i(en)e(main)h(de)f(l'outil)k
Fd(G)t(A)t(B)t(I)18 b Fe(;)216 2366 y(\226)46 b(aquisition)53
b(de)e(connaissances/lang)q(ages)56 b(n\351cessaires)e(pour)d(le)f
(d\351roulement)k(du)c(stage)i(\(v)n(oir)f(ci-)307 2479
y(dessous\))18 b(;)216 2592 y(\226)46 b(deux)24 b(fonctionnalit\351s)29
b(seront)24 b(am\351lior\351es)i(ou)e(ajout\351es)h(:)307
2705 y(\226)46 b(la)27 b(fonction)i(d'inclusion)i(est)c(g\351r\351e)h
(\340)f(l'aide)i(de)e(marqueurs)i(de)e(d\351b)n(ut)i(et)e(de)g(\002n)f
(d'inclusion.)k(L)-8 b('ob-)398 2818 y(jectif)35 b(\340)f(r\351aliser)i
(est)e(que)h(l'af)n(\002chage)h(ou)e(repli)i(de)e(l'arbre)i(soit)e
(g\351rable)i(en)f(fonction)h(des)f(bornes)398 2931 y(d'inclusion)24
b(\(af)n(\002chage)d(de)f(l'arbre)i(en)e(fonction)j(de)d(sa)g
(structure)j(en)d(\002chiers\).)h(En)f(ef)n(fet,)g(une)h(des)g(pr\351-)
398 3043 y(occupation)28 b(majeure)d(est)g(la)g(gestion)h(de)f(l'af)n
(\002chage)i(d'un)e(nombre)h(important)g(de)f(donn\351es,)h(comme)398
3156 y(cela)20 b(est)f(souv)o(ent)i(le)f(cas)f(des)h(logiciels)i
(scienti\002ques.)g(La)c(fonction)k Fa(inclure)p Fe(,)15
b(en)k(ce)h(qu'elle)h(permet)398 3269 y(de)j(structurer)i
(l'information,)g(r\351pond)f(\340)e(cet)h(objectif)18
b(;)307 3382 y(\226)46 b(les)34 b(fonctions)h(de)f(lecture)h(de)e
(donn\351es)j(au)d(format)h(te)o(xte)g(doi)n(v)o(ent)h(\352tre)f
(cr\351ees.)g(Les)f(donn\351es)i(sont)398 3495 y(actuellement)e(sauv)o
(e)o(gard\351es)g(dans)e(un)g(double)h(format)f(:)f(te)o(xte)h(et)f
(arbre)i(s\351rialis\351.)g(Seul)e(ce)h(dernier)398 3608
y(format)25 b(est)f(actuellement)j(lisible)f(en)e(entr\351e.)h(La)e
(base)i(de)f(cette)h(fonctionnalit\351)k(e)o(xiste)c(d\351j\340,)f
(puisque)398 3721 y(des)30 b(parsers)k Fd(JA)-6 b(V)g(A)32
b Fe(compatibles)g(a)n(v)o(ec)f(la)e(grammaire)i(initiale)h(sont)e
(g\351n\351r\351s)i(lors)f(de)f(l'analyse)i(des)398 3834
y(\002chiers.)e(Ce)g(sont)g(ces)g(parsers)k Fd(JA)-6
b(V)g(A)r Fe(,)30 b(coupl\351s)h(\340)f(l'interf)o(ace,)i(qui)f(doi)n
(v)o(ent)g(permettre)g(de)f(relire)h(les)398 3947 y(\002chiers)e(te)o
(xte)g(en)g(entr\351e.)g(Il)f(reste)h(\340)f(les)h(tester)g(et)g(\340)e
(d\351v)o(elopper)32 b(la)c(r\351cup\351ration)k(de)c(l'information)398
4060 y(au)c(sein)g(de)f(l'arborescence)28 b(des)c(donn\351es.)216
4173 y(\226)46 b(r\351daction)26 b(du)e(rapport)h(\002nal)e(et)h(une)g
(pr\351sentation)j(orale.)75 4465 y Ff(3)119 b(Comp\351tences)216
4672 y Fe(Les)23 b(connaissances)28 b(sui)n(v)n(antes)d(sont)g
(requises)g(\(ou)f(de)n(vront)h(\352tre)f(apprises)i(lors)e(du)g
(stage\))h(:)216 4785 y(\226)46 b(langages)38 b Fd(C)t
Fe(,)g Fd(JA)-6 b(V)g(A)t Fe(,)39 b Fd(L)t(E)t(X)t Fe(/)t
Fd(FL)t(E)t(X)t Fe(,)k Fd(Y)-5 b(A)q(C)t(C)t Fe(/)t Fd(B)t(I)t(S)t(O)t
(N)t Fe(,)40 b Fd(J)t(L)t(E)t(X)t Fe(,)h Fd(C)t(U)t(P)18
b Fe(;)34 b(accent)i(particulier)h(sur)e(la)f(gestion)i(et)307
4898 y(l')p Fb(af\002chage)25 b Fe(des)f(arborescences)j(a)n(v)o(ec)f
Fd(JA)-6 b(V)g(A)18 b Fe(;)216 5011 y(\226)48 b Fd(AU)t(T)s(O)t(M)t(A)t
(K)t(E)216 5124 y Fe(\226)g Fd(C)t(V)t(S)18 b Fe(;)1890
5841 y(2)p eop end
%%Page: 3 3
TeXDict begin 3 2 bop 75 399 a Ff(4)119 b(Corr)n(espondants)75
606 y Fe(Ronan)24 b(K)n(eryell)75 718 y(Laboratoire)i(d'Informatique)h
(et)c(T\351l\351communications)75 831 y(\311cole)h(Nationale)h
(Sup\351rieure)g(des)f(T\351l\351communication)j(de)d(Bretagne)75
944 y(T)-6 b(echnop\364le)26 b(de)d(Brest-Iroise)j(BP)c(832)75
1057 y(29285)j(BREST)c(cede)o(x)75 1170 y(Ronan.K)n
(eryell@enst-bretagn)q(e.fr)75 1283 y(T\351l)i(:)g(02.98.00.14.15)75
1509 y(St\351phanie)i(Ev)o(en)77 1622 y Fd(C)t(I)t(G)75
1735 y Fe(\311cole)f(Nationale)h(Sup\351rieure)g(des)f(Mines)g(de)g(P)o
(aris)75 1848 y(35)g(rue)f(Saint)h(Honor\351)75 1960
y(77)g(305)g(FONT)-8 b(AINEBLEA)j(U)17 b(cede)o(x)75
2073 y(e)n(v)o(en@cig.ensmp.fr)75 2186 y(T\351l)23 b(:)g
(02.98.05.60.56)75 2479 y Ff(R\351f\351r)n(ences)181
2686 y Fe(Bonniez,)36 b(S.,)e(2001.)i(G\351n\351rateur)h(automatique)h
(d'interf)o(aces)h(graphiques)f(pour)e(logiciels)i(scienti\002ques.)317
2799 y(Rapport)24 b(de)g(stage)g(3A)f(-)g(ENSTB.)181
2928 y(Ev)o(en,)35 b(S.,)f(N.)g(Flipo,)i(M.)e(Poulin,)i(S.)e(Bonniez,)j
(et)e(R.)f(K)n(eryell,)i(2002.)h(D\351v)o(eloppements)h
(op\351rationnels)317 3041 y(des)27 b(outils)i(de)e(mod\351lisation)j
(de)e(l'eau)g(de)f(la)g(Seine)h(:)f(ProSe)f(\340)h(tubes)h(de)g
(courant,)h(v)o(ersion)f(3.)f(Rapport)317 3154 y(technique,)e(Piren)f
(Seine,)g(rapport)h(d'acti)n(vit\351)h(2002.)181 3283
y(Ev)o(en,)d(S.,)g(R.)f(K)n(eryell,)j(N.)d(Flipo,)j(et)e(M.)g(Poulin,)i
(2003.)g(D\351v)o(eloppements)i(et)c(interf)o(a\347ages)28
b(de)e(P)t Fd(R)q(O)t Fe(S)t Fd(E)h Fe(3.5.)317 3396
y(Rapport)d(technique,)i(Piren)e(Seine,)f(rapport)i(d'acti)n(vit\351)h
(2003.)181 3525 y(Ev)o(en,)34 b(S.,)f(R.)g(K)n(eryell,)i(N.)e(Flipo,)h
(et)h(M.)e(Poulin,)i(2004.)g(D\351v)o(eloppements)j(et)c(interf)o
(a\347ages)k(de)d(PR)l(OSE)317 3638 y(3.5,)51 b(Contrib)n(ution)k(du)d
(Centre)h(d'Informatique)j(G\351ologique)e(de)e(l'Ecole)h(des)f(Mines)h
(de)f(P)o(aris)317 3751 y(au)d(programme)h(de)g(recherche)i(Piren)d
(Seine.)g(Rapport)i(technique,)g(\311cole)f(des)f(Mines)h(de)g(P)o
(aris)317 3864 y(LHM/RD/04/04.)181 3993 y(P)o(aquin,)24
b(P)-10 b(.,)21 b(2005.)k(G\351n\351rateur)g(automatique)h(de)e(Belles)
g(Interf)o(aces.)i(Rapport)e(de)g(stage)g(3A)f(-)g(ENSTB.)181
4123 y(Schlee,)f(M.,)e(2002.)44 b(Generati)n(v)o(e)23
b(Programming)g(of)f(Graphical)h(User)f(Interf)o(aces.)i(Ph.)d(D.)f
(thesis,)j(F)o(achhoch-)317 4236 y(schule)i(Kaiserlautern.)1890
5841 y(3)p eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
